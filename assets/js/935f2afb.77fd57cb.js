"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Get Started","href":"/docs/get-started","docId":"get-started"},{"type":"link","label":"Installation","href":"/docs/installation","docId":"installation"},{"type":"link","label":"Connection","href":"/docs/connection","docId":"connection"},{"type":"category","label":"Database","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Table","href":"/docs/database/table","docId":"database/table"},{"type":"link","label":"Column","href":"/docs/database/column","docId":"database/column"},{"type":"link","label":"DataType","href":"/docs/database/data-type","docId":"database/data-type"}],"href":"/docs/database/"},{"type":"category","label":"Insert","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Upsert","href":"/docs/insert/upsert","docId":"insert/upsert"}],"href":"/docs/insert/"},{"type":"category","label":"Select","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Limit","href":"/docs/select/limit","docId":"select/limit"},{"type":"link","label":"Skip","href":"/docs/select/skip","docId":"select/skip"},{"type":"link","label":"Order By","href":"/docs/select/order-by","docId":"select/order-by"},{"type":"link","label":"Aggregate Functions","href":"/docs/select/aggregate","docId":"select/aggregate"},{"type":"link","label":"Group By","href":"/docs/select/group-by","docId":"select/group-by"},{"type":"link","label":"Distinct","href":"/docs/select/distinct","docId":"select/distinct"},{"type":"link","label":"Case","href":"/docs/select/case","docId":"select/case"},{"type":"link","label":"Join","href":"/docs/select/join","docId":"select/join"},{"type":"link","label":"Flatten","href":"/docs/select/flatten","docId":"select/flatten"},{"type":"link","label":"Store","href":"/docs/select/store","docId":"select/store"}],"href":"/docs/select/"},{"type":"category","label":"Where","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"And","href":"/docs/where/and","docId":"where/and"},{"type":"link","label":"Like","href":"/docs/where/like","docId":"where/like"},{"type":"link","label":"In","href":"/docs/where/in","docId":"where/in"},{"type":"link","label":"Regex","href":"/docs/where/regex","docId":"where/regex"},{"type":"link","label":"Or","href":"/docs/where/or","docId":"where/or"},{"type":"link","label":"Operators","href":"/docs/where/operators","docId":"where/operators"},{"type":"link","label":"Between","href":"/docs/where/between","docId":"where/between"},{"type":"link","label":"Advanced Example","href":"/docs/where/adv-sql-example","docId":"where/adv-sql-example"}],"href":"/docs/where/"},{"type":"category","label":"Update","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Update with operators","href":"/docs/update/with-operators","docId":"update/with-operators"},{"type":"link","label":"mapSet","href":"/docs/update/map-set","docId":"update/map-set"}],"href":"/docs/update/"},{"type":"link","label":"Remove","href":"/docs/remove","docId":"remove"},{"type":"link","label":"Count","href":"/docs/count","docId":"count"},{"type":"link","label":"Union","href":"/docs/union","docId":"union"},{"type":"link","label":"Clear","href":"/docs/clear","docId":"clear"},{"type":"link","label":"Intersect","href":"/docs/intersect","docId":"intersect"},{"type":"link","label":"Transaction","href":"/docs/transaction","docId":"transaction"},{"type":"link","label":"Multi Entry","href":"/docs/multi-entry","docId":"multi-entry"},{"type":"link","label":"keyPath","href":"/docs/keypath","docId":"keypath"},{"type":"link","label":"Drop Database","href":"/docs/drop-db","docId":"drop-db"},{"type":"link","label":"Update Database Schema","href":"/docs/update-schema","docId":"update-schema"},{"type":"link","label":"Terminate","href":"/docs/terminate","docId":"terminate"},{"type":"link","label":"Map","href":"/docs/map","docId":"map"},{"type":"link","label":"Helpers","href":"/docs/helpers","docId":"helpers"},{"type":"link","label":"Enums","href":"/docs/enums","docId":"enums"},{"type":"link","label":"Import Scripts","href":"/docs/import-scripts","docId":"import-scripts"},{"type":"link","label":"Migrating from v3 to v4","href":"/docs/v3-to-v4","docId":"v3-to-v4"},{"type":"link","label":"Event","href":"/docs/event","docId":"event"},{"type":"link","label":"Middleware","href":"/docs/middleware","docId":"middleware"},{"type":"link","label":"Plugin","href":"/docs/plugin","docId":"plugin"},{"type":"link","label":"Performance Optimization","href":"/docs/optimization","docId":"optimization"},{"type":"link","label":"SqlWeb","href":"/docs/sqlweb","docId":"sqlweb"},{"type":"link","label":"IDBStudio","href":"/docs/idbstudio","docId":"idbstudio"}]},"docs":{"clear":{"id":"clear","title":"Clear","description":"clear is used to remove all records from a table.","sidebar":"tutorialSidebar"},"connection":{"id":"connection","title":"Connection","description":"The Connection class is the main interface for interacting with the indexeddb database and provides various APIs such as select, count, etc. to perform operations on the database.","sidebar":"tutorialSidebar"},"count":{"id":"count","title":"Count","description":"count api can be used to count records in a table. You can use where to filter results similar to select.","sidebar":"tutorialSidebar"},"database/column":{"id":"database/column","title":"Column","description":"Column in jsstore is an object where column name is key & column options are values.","sidebar":"tutorialSidebar"},"database/data-type":{"id":"database/data-type","title":"DataType","description":"JsStore provides following data type -","sidebar":"tutorialSidebar"},"database/index":{"id":"database/index","title":"Database","description":"In order to create the database in indexeddb, you need to perform two steps -","sidebar":"tutorialSidebar"},"database/table":{"id":"database/table","title":"Table","description":"Table is like a collection where your data is stored inside a row and a field is identified by column.","sidebar":"tutorialSidebar"},"drop-db":{"id":"drop-db","title":"Drop Database","description":"dropDb is used to remove the current database from browser storage.","sidebar":"tutorialSidebar"},"enums":{"id":"enums","title":"Enums","description":"JsStore provides following enum values. These are -","sidebar":"tutorialSidebar"},"event":{"id":"event","title":"Event","description":"jsstore provides some events which can be subscribed using \\"on\\" & unsubscribed using \\"off\\"","sidebar":"tutorialSidebar"},"get-started":{"id":"get-started","title":"Get Started","description":"Welcome to the Get Started tutorial for using JsStore to perform CRUD operations in IndexedDB.","sidebar":"tutorialSidebar"},"helpers":{"id":"helpers","title":"Helpers","description":"logStatus","sidebar":"tutorialSidebar"},"idbstudio":{"id":"idbstudio","title":"IDBStudio","description":"IDBStudio is a helper tool for jsstore development. It helps users to execute , debug and learn jsstore query.","sidebar":"tutorialSidebar"},"import-scripts":{"id":"import-scripts","title":"Import Scripts","description":"importScripts can be used to add scripts inside jsstore web worker. It internally uses importScripts .","sidebar":"tutorialSidebar"},"insert/index":{"id":"insert/index","title":"Insert","description":"insert api is used to insert new records in a table.","sidebar":"tutorialSidebar"},"insert/upsert":{"id":"insert/upsert","title":"Upsert","description":"upsert is an option in insert api which is used to replace the record if exist otherwise insert as new record if does not exist.","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"There are two part of jsstore -","sidebar":"tutorialSidebar"},"intersect":{"id":"intersect","title":"Intersect","description":"intersect api combine the result of two or more select query and take only common records between the queries result.","sidebar":"tutorialSidebar"},"keypath":{"id":"keypath","title":"keyPath","description":"keyPath is a option in column. It is used to add multiple index, so that query execution can be made faster. It takes an array of type string.","sidebar":"tutorialSidebar"},"map":{"id":"map","title":"Map","description":"Map allows you to stores data in the key value format. The data is stored in a special table called - KeyStore.","sidebar":"tutorialSidebar"},"middleware":{"id":"middleware","title":"Middleware","description":"Middleware is a function which has access to request query, result.They are called for each request in the same order as defined.","sidebar":"tutorialSidebar"},"multi-entry":{"id":"multi-entry","title":"Multi Entry","description":"MultiEntry allows you to add indexing on array column.","sidebar":"tutorialSidebar"},"optimization":{"id":"optimization","title":"Performance Optimization","description":"With high amount of data in your tables - query execute time is slow and which means your app becomes slow.","sidebar":"tutorialSidebar"},"plugin":{"id":"plugin","title":"Plugin","description":"Plugin can be used to write common set of generic codes which can be provided to anyone using a package. Using plugin you can inject apis or insert middleware.","sidebar":"tutorialSidebar"},"remove":{"id":"remove","title":"Remove","description":"remove api can be used to remove records from a table. where can be used to filter target records.","sidebar":"tutorialSidebar"},"select/aggregate":{"id":"select/aggregate","title":"Aggregate Functions","description":"An aggregate function performs a calculation on multiple values and returns a single value.","sidebar":"tutorialSidebar"},"select/case":{"id":"select/case","title":"Case","description":"case is an option in select query which is used to change stored value based on some condition. It is similar to multiple if else statetement. So once a condition is true it is stopped and value is returned.","sidebar":"tutorialSidebar"},"select/distinct":{"id":"select/distinct","title":"Distinct","description":"Distinct is used to return the unique set of result. Distinct filters the result for all columns together except Primary column, since Primary column will make the result always unique.","sidebar":"tutorialSidebar"},"select/flatten":{"id":"select/flatten","title":"Flatten","description":"flatten is a option in select query which will flatten array data into primitive data.","sidebar":"tutorialSidebar"},"select/group-by":{"id":"select/group-by","title":"Group By","description":"The Group By is used to group the result-set by one or more columns. You can also use Aggregate functions with group by similar to what you can use in SQL.","sidebar":"tutorialSidebar"},"select/index":{"id":"select/index","title":"Select","description":"The Select api is used to select data from a database.","sidebar":"tutorialSidebar"},"select/join":{"id":"select/join","title":"Join","description":"JsStore supports two joins - inner (by default) and left.","sidebar":"tutorialSidebar"},"select/limit":{"id":"select/limit","title":"Limit","description":"Limit is used to specify the number of records to return. It is available with only select.","sidebar":"tutorialSidebar"},"select/order-by":{"id":"select/order-by","title":"Order By","description":"Order By is used to sort the data in ascending or descending order, based on any column.","sidebar":"tutorialSidebar"},"select/skip":{"id":"select/skip","title":"Skip","description":"Skip is used to specify the number of records to skip. It is available with only select.","sidebar":"tutorialSidebar"},"select/store":{"id":"select/store","title":"Store","description":"store is an option in select api which allows to query on data from variable. All query options like ordering, where, group by, aggregate etc can be performed.","sidebar":"tutorialSidebar"},"sqlweb":{"id":"sqlweb","title":"SqlWeb","description":"SqlWeb is an extension of JsStore which allows to use sql query for performing database operation in IndexedDB.","sidebar":"tutorialSidebar"},"terminate":{"id":"terminate","title":"Terminate","description":"Terminate close the connection and releases everything.","sidebar":"tutorialSidebar"},"transaction":{"id":"transaction","title":"Transaction","description":"IndexedDB is a pure transactional database which means all the query is executed using the transaction.","sidebar":"tutorialSidebar"},"union":{"id":"union","title":"Union","description":"union api combine the result of two or more select query and remove duplicate records.","sidebar":"tutorialSidebar"},"update-schema":{"id":"update-schema","title":"Update Database Schema","description":"Database schema can be updated by incrementing the version in database object.","sidebar":"tutorialSidebar"},"update/index":{"id":"update/index","title":"Update","description":"Update is used to modify the existing records in a table. You can use where with update to filter target records.","sidebar":"tutorialSidebar"},"update/map-set":{"id":"update/map-set","title":"mapSet","description":"mapSet allows you to set the update value using a method. This is helpful in case where you want to update the value using some logic.","sidebar":"tutorialSidebar"},"update/with-operators":{"id":"update/with-operators","title":"Update with operators","description":"Some Arithmetic operators can be used to update data.","sidebar":"tutorialSidebar"},"v3-to-v4":{"id":"v3-to-v4","title":"Migrating from v3 to v4","description":"v4 now suports multiple database feature, which was lacking in earlier version of jsstore. In order to do that some big changes has been done in v4.","sidebar":"tutorialSidebar"},"where/adv-sql-example":{"id":"where/adv-sql-example","title":"Advanced Example","description":"These are some examples of common use cases -","sidebar":"tutorialSidebar"},"where/and":{"id":"where/and","title":"And","description":"The AND operator is used with the WHERE clause in SQL to filter records based on multiple conditions. It allows you to specify multiple conditions that must all be true for a record to be included in the result set.","sidebar":"tutorialSidebar"},"where/between":{"id":"where/between","title":"Between","description":"\\" \\\\- \\" symbol is used to select result between two values. The values should be numbers only.","sidebar":"tutorialSidebar"},"where/in":{"id":"where/in","title":"In","description":"In allows you to specify multiple values of same column. It is a shorthand for multiple or query.","sidebar":"tutorialSidebar"},"where/index":{"id":"where/index","title":"Where","description":"The where clause can be used to filter records, similar to the SQL WHERE clause.","sidebar":"tutorialSidebar"},"where/like":{"id":"where/like","title":"Like","description":"Like is used with Where to search for a specified pattern in a column. Currently We support only \'%\' character.","sidebar":"tutorialSidebar"},"where/operators":{"id":"where/operators","title":"Operators","description":"JsStore supports following operators : -","sidebar":"tutorialSidebar"},"where/or":{"id":"where/or","title":"Or","description":"or can be used with where to filter records to include records where any of the condition is true.","sidebar":"tutorialSidebar"},"where/regex":{"id":"where/regex","title":"Regex","description":"Regex is used with Where to search for a specified pattern in a column value. For more information about regex, visit mozilla regular expression guide","sidebar":"tutorialSidebar"}}}')}}]);