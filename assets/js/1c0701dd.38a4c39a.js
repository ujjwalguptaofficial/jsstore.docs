"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6235],{4137:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>y});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=n.createContext({}),s=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(d.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,y=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return t?n.createElement(y,o(o({ref:r},c),{},{components:t})):n.createElement(y,o({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7157:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=t(7462),a=(t(7294),t(4137));const i={sidebar_position:24,keywords:["middleware","plugin","indexeddb","jsstore"]},o="Middleware",l={unversionedId:"middleware",id:"middleware",title:"Middleware",description:"Middleware is a function which has access to request query, result.They are called for each request in the same order as defined.",source:"@site/docs/middleware.md",sourceDirName:".",slug:"/middleware",permalink:"/docs/middleware",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/middleware.md",tags:[],version:"current",sidebarPosition:24,frontMatter:{sidebar_position:24,keywords:["middleware","plugin","indexeddb","jsstore"]},sidebar:"tutorialSidebar",previous:{title:"Event",permalink:"/docs/event"},next:{title:"Plugin",permalink:"/docs/plugin"}},d={},s=[{value:"Create Middleware",id:"create-middleware",level:2},{value:"Register",id:"register",level:3},{value:"main",id:"main",level:4},{value:"worker",id:"worker",level:4}],c={toc:s},u="wrapper";function p(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Middleware is a function which has access to request query, result.They are called for each request in the same order as defined."),(0,a.kt)("p",null,"Middleware can be used to listen to each query and modify if necessary."),(0,a.kt)("p",null,"e.g - Let's say i want to encode my data when being inserted to make sure its not readable or for security purpose and decode when being fetched."),(0,a.kt)("h2",{id:"create-middleware"},"Create Middleware"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var connection = new JsStore.Connection();\nconst encryptMiddleware = function (request) {\n\n    const query = request.query\n\n    if(request.name == 'insert' && query.encrypt){\n      \n        encryptData(query)\n\n    }\n    else if(request.name == 'select' && query.decrypt){\n        // result will be encrypted, so let's wait for result and then decrypt data\n\n        request.onResult((result)=>{\n            decryptData(result);\n        })\n\n    }\n};\n")),(0,a.kt)("h3",{id:"register"},"Register"),(0,a.kt)("p",null,"middleware can be register both in main thread or worker."),(0,a.kt)("h4",{id:"main"},"main"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"connection.addMiddleware(encryptMiddleware);\n")),(0,a.kt)("h4",{id:"worker"},"worker"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"connection.addMiddleware(encryptMiddleware, true);\n\n")),(0,a.kt)("p",null,"now middleware is registered and can be used. Let's call insert api"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"connection.insert({\n    into:\"my_secure_table\"\n    values:[{\n        password:'12345'\n    }],\n    // some extra information can be provided\n    encrypt: true\n})\n")),(0,a.kt)("p",null,"similary data can be decoded by the middleware -"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'connection.select({\n    from:"my_secure_table"\n    decrypt: true\n})\n')),(0,a.kt)("p",null,"Middleware can be also created and provided as package using ",(0,a.kt)("a",{parentName:"p",href:"/docs/plugin"},"plugin"),"."))}p.isMDXComponent=!0}}]);